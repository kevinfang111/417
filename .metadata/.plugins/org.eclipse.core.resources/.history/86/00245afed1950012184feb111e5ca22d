package Data;
import Data.timer;
import com.google.appengine.api.datastore.DatastoreService;
import com.google.appengine.api.datastore.DatastoreServiceFactory;
import com.google.appengine.api.datastore.Entity;
import com.google.appengine.api.datastore.Query;
import com.google.appengine.api.datastore.Query.FilterOperator;
import com.google.appengine.api.datastore.Transaction;

public class item {
	
	public item () {
		
	}
	
	// populates general information from the user
	public void createItem (String itemName, String itemOwner, float startingPrice, int startingTime) {
		Entity e = new Entity("item", itemName);
		e.setProperty("itemOwner", itemOwner);
		e.setProperty("startingPrice", startingPrice);
		e.setProperty("startingTime", startingTime);
		DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
		ds.put(e);
		
		this.itemName = itemName;
		this.itemOwner = itemOwner;
		this.startingBid = startingPrice;
		this.currentBid = 0;
		this.timeLeft = startingTime;
	}
	
	// populates general information from database for 1 item
	public static String queryItem (String itemName) {
		DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
		Query q = new Query(itemName);
		
		for (Entity e: ds.prepare(q).asIterable()) {
			if (e.getKey().getName().equals(itemName)){
				return e.getKey().getName();
			}
		}
		return "no items found";
	}
	
	public void bidItem (String user, float value) {
		
	}
	
	public void addComment (String comment) {
		
	}
	
	public void addRating (int rating) {
		
	}
	
	// User Information populated by getUserInfo
	String numActiveBids;
	String comments [];
	int ratings [];
	int timeLeft;
	float price;
	String itemOwner;
	String itemName;
	float currentBid;
	float startingBid;
}
