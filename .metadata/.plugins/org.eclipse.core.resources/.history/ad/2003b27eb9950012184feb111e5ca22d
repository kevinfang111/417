package Data;
import Data.timer;

import com.google.appengine.api.datastore.DatastoreService;
import com.google.appengine.api.datastore.DatastoreServiceFactory;
import com.google.appengine.api.datastore.Entity;
import com.google.appengine.api.datastore.Query;
import com.google.appengine.api.datastore.Query.FilterOperator;
import com.google.appengine.api.datastore.Transaction;

public class item {
	
	item () {
		
	}
	
	// populates general information from the user
	void createItem (String itemName, String itemOwner, float startingPrice, int startingTime) {
		Entity e = new Entity("item", itemName);
		e.setProperty("itemOwner", itemOwner);
		e.setProperty("startingPrice", startingPrice);
		e.setProperty("startingTime", startingTime);
		DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
		ds.put(e);
	}
	
	// populates general information from database for 1 item
	public static Iterable<Entity> queryItem (String itemName) {
		DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
		Query q = new Query("item");
		return ds.prepare(q).asIterable();
	}
	
	void bidItem (String user, float value) {
		
	}
	
	void addComment (String comment) {
		
	}
	
	void addRating (int rating) {
		
	}
	
	
	
	// User Information populated by getUserInfo
	String numActiveBids;
	String comments [];
	int ratings [];
	int timeLeft;
	float price;
	String itemOwner;
	String currentWinnerBid;
}
